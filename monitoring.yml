version: '3.7'

networks:
  front-end:
    name: front-end
    driver: overlay
    attachable: true

services:
  traefik:
    image: traefik:v1.7
    hostname: traefik
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /monitoring/data/ssl:/etc/traefik/certs
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 30s
        order: stop-first
      rollback_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
        monitor: 30s
        order: stop-first
      resources:
        limits:
          cpus: '0.5'
          memory: 250M
        reservations:
          cpus: '0.25'
          memory: 50M
    command: >
      - "--docker"
      - "--docker.swarmmode"
      - "--docker.watch"
      - "--docker.exposedbydefault=true"
      - "--insecureSkipVerify=true"
      - "--entryPoints=Name:http Address::80"
      - "--entryPoints=Name:https Address::443
         TLS.MinVersion:VersionTLS12
         TLS:/etc/traefik/certs/CERT_NAME.crt,/etc/traefik/certs/CERT_NAME.key"
      - "--defaultentrypoints=http,https"
      - "--logLevel=ERROR"
    networks:
      - front-end

  grafana:
    image: mon_grafana
    hostname: grafana
    env_file:
      - /monitoring/.env
    environment:
      - GF_DEFAULT_INSTANCE_NAME=Monitoring
      - GF_SECURITY_COOKIE_SECURE=true
    volumes:
      - /monitoring/data/grafana/:/var/lib/grafana
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 30s
        order: stop-first
      rollback_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
        monitor: 30s
        order: stop-first
      resources:
        limits:
          cpus: '2'
          memory: 900M
        reservations:
          cpus: '0.25'
          memory: 50M
      labels:
        - traefik.frontend.rule=Host:GRAFANA_DOMAIN
        - traefik.port=3000
        - traefik.docker.network=front-end
        # HTTP to HTTPS Redirect
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # HTTPS
        - traefik.webservice.frontend.entryPoints=https
        # HTTPS Security Headers
        - traefik.frontend.headers.browserXSSFilter=true
        - traefik.frontend.headers.contentTypeNosniff=true
        - traefik.frontend.headers.SSLRedirect=true
        - traefik.frontend.headers.referrerPolicy=same-origin
        - traefik.frontend.headers.forceSTSHeader=true
        - traefik.frontend.headers.STSSeconds=31536000
        - traefik.frontend.headers.STSIncludeSubdomains=true
        - traefik.frontend.headers.STSPreload=true
    networks:
      - front-end

  prometheus:
    image: mon_prom
    hostname: prometheus
    command: ['--config.file=/src/prometheus.yml']
    env_file:
      - /monitoring/.env
    volumes:
      - /monitoring/prometheus/src/targets.yml:/src/targets.yml
      - /monitoring/data/prometheus:/prometheus
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 30s
        order: stop-first
      rollback_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
        monitor: 30s
        order: stop-first
      resources:
        limits:
          cpus: '1'
          memory: 900M
        reservations:
          cpus: '0.25'
          memory: 50M
      labels:
        - traefik.frontend.rule=Host:PROM_DOMAIN
        - traefik.port=9090
        - traefik.docker.network=front-end
        # HTTP to HTTPS Redirect
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # HTTPS
        - traefik.webservice.frontend.entryPoints=https
        # HTTPS Security Headers
        - traefik.frontend.headers.browserXSSFilter=true
        - traefik.frontend.headers.contentTypeNosniff=true
        - traefik.frontend.headers.SSLRedirect=true
        - traefik.frontend.headers.referrerPolicy=same-origin
        - traefik.frontend.headers.forceSTSHeader=true
        - traefik.frontend.headers.STSSeconds=31536000
        - traefik.frontend.headers.STSIncludeSubdomains=true
        - traefik.frontend.headers.STSPreload=true
    networks:
      - front-end

  blackbox:
    image: mon_blackbox
    hostname: blackbox
    command: ['--config.file=/src/blackbox.yml']
    env_file:
      - /monitoring/.env
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 30s
        order: stop-first
      rollback_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
        monitor: 30s
        order: stop-first
      resources:
        limits:
          cpus: '0.5'
          memory: 250M
        reservations:
          cpus: '0.25'
          memory: 50M
      labels:
        - traefik.frontend.rule=Host:BOX_DOMAIN
        - traefik.port=9115
        - traefik.docker.network=front-end
        # HTTP to HTTPS Redirect
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # HTTPS
        - traefik.webservice.frontend.entryPoints=https
        # HTTPS Security Headers
        - traefik.frontend.headers.browserXSSFilter=true
        - traefik.frontend.headers.contentTypeNosniff=true
        - traefik.frontend.headers.SSLRedirect=true
        - traefik.frontend.headers.referrerPolicy=same-origin
        - traefik.frontend.headers.forceSTSHeader=true
        - traefik.frontend.headers.STSSeconds=31536000
        - traefik.frontend.headers.STSIncludeSubdomains=true
        - traefik.frontend.headers.STSPreload=true
    networks:
      - front-end

  alertmanager:
    image: mon_alerts
    hostname: alertsmanager
    command: ['--config.file=/src/alertmanager.yml']
    env_file:
      - /monitoring/.env
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 30s
        order: stop-first
      rollback_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
        monitor: 30s
        order: stop-first
      resources:
        limits:
          cpus: '0.5'
          memory: 250M
        reservations:
          cpus: '0.25'
          memory: 50M
      labels:
        - traefik.frontend.rule=Host:ALERT_DOMAIN
        - traefik.port=9093
        - traefik.docker.network=front-end
        # HTTP to HTTPS Redirect
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # HTTPS
        - traefik.webservice.frontend.entryPoints=https
        # HTTPS Security Headers
        - traefik.frontend.headers.browserXSSFilter=true
        - traefik.frontend.headers.contentTypeNosniff=true
        - traefik.frontend.headers.SSLRedirect=true
        - traefik.frontend.headers.referrerPolicy=same-origin
        - traefik.frontend.headers.forceSTSHeader=true
        - traefik.frontend.headers.STSSeconds=31536000
        - traefik.frontend.headers.STSIncludeSubdomains=true
        - traefik.frontend.headers.STSPreload=true
    networks:
      - front-end